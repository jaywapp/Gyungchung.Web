const app = "gyungchung"
const id = "1Yc9bKon1yJw1R2KDteb_c_nNLWrECgO0UZsm5UdD7UM";

const SHEET_USERS = "회원목록";
const SHEET_MATCHES = "일정";
const SHEET_ATTENDANCE= "참석여부";
const SHEET_ATTENDANCE_RESULT = "출석부";
const SHEET_DUE = "회비";

const {GoogleSpreadsheet} = require("google-spreadsheet");
const gs_creds = require("./gyungchoong-5618ffe4f81e.json");
const {GoogleAuth} = require('google-auth-library');

const serviceAccountAuth = new GoogleAuth({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
    key: process.env.GOOGLE_PRIVATE_KEY,
    scopes: [
      'https://www.googleapis.com/auth/spreadsheets',
    ],
  });

const doc = new GoogleSpreadsheet(id, serviceAccountAuth);

async function authGoogleSheet(){
	try{
		await doc.useServiceAccountAuth(gs_creds);
		await doc.loadInfo()
	}catch(err){
		console.log( "AUTH ERROR ", err)
	}
}

authGoogleSheet();

function GetChar(column){
    var value1 = column / 26;
    var value2 = column % 26;

    var result = "";
    if(value1 != 0)
        result += (value1 + 64);
    
    result += (value2 + 64);

    return result;
}

function GetRange(sheet, startColumn, startRow, endColumn, endRow)
{
    var result = "";

    result += '\'';
    result += sheet;
    result += '\'';
    result += GetChar(startColumn);
    result += startRow;
    result += ':';
    result += GetChar(endColumn);
    result += endRow;

    return result;
}

export function GetUsers(){

    var sheet = doc.sheetsByTitle(SHEET_USERS);
    var rows = sheet.getRows({offset:1, limit:100});

    rows.forEach((ele)=>{
    	console.log( ele._rawData[0] ) // 읽어온 rows 중 현재row에서 첫 번째 컬럼과 두 번째 컬럼을 출력합니다.
    });
}